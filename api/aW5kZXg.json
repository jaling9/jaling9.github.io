{"title":"DNS查询原理入门-阮一峰","date":"2022-11-21T14:40:23.924Z","link":"","comments":true,"tags":["互联网协议","转载"],"categories":["计算机"],"updated":"2022-11-21T14:40:54.680Z","content":"<blockquote>\n<p>原文链接：<a href=\"https://www.ruanyifeng.com/blog/2022/08/dns-query.html\">https://www.ruanyifeng.com/blog/2022/08/dns-query.html</a></p>\n</blockquote>\n<p>通过 DNS 查询，得到域名的 IP 地址，才能访问网站。</p>\n<p>那么，DNS 查询到底是怎么完成的？本文通过实例，详细介绍背后的步骤。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080102.webp\"></p>\n<h2 id=\"一、DNS-服务器\"><a href=\"#一、DNS-服务器\" class=\"headerlink\" title=\"一、DNS 服务器\"></a>一、DNS 服务器</h2><p>域名对应的 IP 地址，都保存在 DNS 服务器。</p>\n<p>我们输入域名，浏览器就会在后台，自动向 DNS 服务器发出请求，获取对应的 IP 地址。这就是 DNS 查询。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080103.webp\"></p>\n<p>举例来说，我输入 <code>es6.ruanyifeng.com</code> 这个域名，浏览器就要向 DNS 服务器查询，它的 IP 地址是什么，然后向该 IP 发出访问请求。</p>\n<p>网上有很多公用的 DNS 服务器，这篇文章选择 Cloudflare 公司提供的 1.1.1.1 进行演示。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080104.webp\"></p>\n<h2 id=\"二、dig-命令\"><a href=\"#二、dig-命令\" class=\"headerlink\" title=\"二、dig 命令\"></a>二、dig 命令</h2><p>命令行工具 dig 可以跟 DNS 服务器互动，我们就用它演示 DNS 查询。如果你还没有安装，可以搜一下安装方法，在 Linux 系统下是非常容易的。</p>\n<p>它的查询语法如下（美元符号<code>$</code>是命令行提示符）。</p>\n<blockquote>\n<figure><div class=\"code-wrapper\"><pre class=\"language-none\"><code class=\"language-none\">\n$ dig @[DNS 服务器] [域名]</code></pre></div></figure>\n</blockquote>\n<p>向 1.1.1.1 查询域名，就执行下面的命令。</p>\n<blockquote>\n<figure><div class=\"code-wrapper\"><pre class=\"language-none\"><code class=\"language-none\">\n$ dig @1.1.1.1 es6.ruanyifeng.com</code></pre></div></figure>\n</blockquote>\n<p>正常情况下，它会输出一大堆内容。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080105.webp\"></p>\n<p>在其中找到 ANSWER SECTION 这个部分，它给出了查询的答案，域名对应的 IP 地址是 104.198.14.52。</p>\n<h2 id=\"三、域名的树状结构\"><a href=\"#三、域名的树状结构\" class=\"headerlink\" title=\"三、域名的树状结构\"></a>三、域名的树状结构</h2><p>你可能会问，难道 DNS 服务器（比如 1.1.1.1）保存了世界上所有域名（包括二级域名、三级域名）的 IP 地址？</p>\n<p>当然不是。DNS 是一个分布式系统，1.1.1.1 只是用户查询入口，它也需要再向其他 DNS 服务器查询，才能获得最终的 IP 地址。</p>\n<p>要说清楚 DNS 完整的查询过程，就必须了解 <strong>域名是一个树状结构</strong>。</p>\n<p>最顶层的域名是根域名（root），然后是顶级域名（top-level domain，简写 TLD），再是一级域名、二级域名、三级域名。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080106.webp\"></p>\n<p><strong>（1）根域名</strong></p>\n<p>所有域名的起点都是根域名，它写作一个点<code>.</code>，放在域名的结尾。因为这部分对于所有域名都是相同的，所以就省略不写了，比如<code>example.com</code>等同于<code>example.com.</code>（结尾多一个点）。</p>\n<p>你可以试试，任何一个域名结尾加一个点，浏览器都可以正常解读。</p>\n<p><strong>（2）顶级域名</strong></p>\n<p>根域名的下一级是顶级域名。它分成两种：通用顶级域名（gTLD，比如 .com 和 .net）和国别顶级域名（ccTLD，比如 .cn 和 .us）。</p>\n<p>顶级域名由国际域名管理机构 ICANN 控制，它委托商业公司管理 gTLD，委托各国管理自己的国别域名。</p>\n<p><strong>（3）一级域名</strong></p>\n<p>一级域名就是你在某个顶级域名下面，自己注册的域名。比如，<code>ruanyifeng.com</code>就是我在顶级域名<code>.com</code>下面注册的。</p>\n<p><strong>（4）二级域名</strong></p>\n<p>二级域名是一级域名的子域名，是域名拥有者自行设置的，不用得到许可。比如，<code>es6</code> 就是 <code>ruanyifeng.com</code> 的二级域名。</p>\n<h2 id=\"四、域名的逐级查询\"><a href=\"#四、域名的逐级查询\" class=\"headerlink\" title=\"四、域名的逐级查询\"></a>四、域名的逐级查询</h2><p>这种树状结构的意义在于，<strong>只有上级域名，才知道下一级域名的 IP 地址，需要逐级查询。</strong></p>\n<p>每一级域名都有自己的 DNS 服务器，存放下级域名的 IP 地址。</p>\n<p>所以，如果想要查询二级域名 <code>es6.ruanyifeng.com</code> 的 IP 地址，需要三个步骤。</p>\n<blockquote>\n<p>第一步，查询根域名服务器，获得顶级域名服务器<code>.com</code>（又称 TLD 服务器）的 IP 地址。</p>\n<p>第二步，查询 TLD 服务器 <code>.com</code>，获得一级域名服务器 <code>ruanyifeng.com</code> 的 IP 地址。</p>\n<p>第三步，查询一级域名服务器 <code>ruanyifeng.com</code>，获得二级域名 <code>es6</code> 的 IP 地址。</p>\n</blockquote>\n<p>下面依次演示这三个步骤。</p>\n<h2 id=\"五、根域名服务器\"><a href=\"#五、根域名服务器\" class=\"headerlink\" title=\"五、根域名服务器\"></a>五、根域名服务器</h2><p>根域名服务器全世界一共有13台（都是服务器集群）。它们的域名和 IP 地址如下。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080107.webp\"></p>\n<p>根域名服务器的 IP 地址是不变的，集成在操作系统里面。</p>\n<p>操作系统会选其中一台，查询 TLD 服务器的 IP 地址。</p>\n<blockquote>\n<figure><div class=\"code-wrapper\"><pre class=\"language-none\"><code class=\"language-none\">\n$ dig @192.33.4.12 es6.ruanyifeng.com</code></pre></div></figure>\n</blockquote>\n<p>上面示例中，我们选择<code>192.33.4.12</code>，向它发出查询，询问<code>es6.ruanyifeng.com</code>的 TLD 服务器的 IP 地址。</p>\n<p>dig 命令的输出结果如下。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080108.webp\"></p>\n<p>因为它给不了 <code>es6.ruanyifeng.com</code> 的 IP 地址，所以输出结果中没有 ANSWER SECTION，只有一个 AUTHORITY SECTION，给出了<code>com.</code>的13台 TLD 服务器的域名。</p>\n<p>下面还有一个 ADDITIONAL SECTION，给出了这13台 TLD 服务器的 IP 地址（包含 IPv4 和 IPv6 两个地址）。</p>\n<h2 id=\"六、TLD-服务器\"><a href=\"#六、TLD-服务器\" class=\"headerlink\" title=\"六、TLD 服务器\"></a>六、TLD 服务器</h2><p>有了 TLD 服务器的 IP 地址以后，我们再选一台接着查询。</p>\n<blockquote>\n<figure><div class=\"code-wrapper\"><pre class=\"language-none\"><code class=\"language-none\">\n$ dig @192.41.162.30 es6.ruanyifeng.com</code></pre></div></figure>\n</blockquote>\n<p>上面示例中，192.41.162.30 是随便选的一台 .com 的 TLD 服务器，我们向它询问 <code>es6.ruanyifeng.com</code> 的 IP 地址。</p>\n<p>返回结果如下。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080109.webp\"></p>\n<p>它依然没有 ANSWER SECTION 的部分，只有 AUTHORITY SECTION，给出了一级域名 ruanyifeng.com 的两台 DNS 服务器。</p>\n<p>下面的 ADDITIONAL SECTION 就是这两台 DNS 服务器对应的 IP 地址。</p>\n<h2 id=\"七、一级域名的-DNS-服务器\"><a href=\"#七、一级域名的-DNS-服务器\" class=\"headerlink\" title=\"七、一级域名的 DNS 服务器\"></a>七、一级域名的 DNS 服务器</h2><p>第三步，再向一级域名的 DNS 服务器查询二级域名的 IP 地址。</p>\n<blockquote>\n<figure><div class=\"code-wrapper\"><pre class=\"language-none\"><code class=\"language-none\">\n$ dig @172.64.32.123 es6.ruanyifeng.com</code></pre></div></figure>\n</blockquote>\n<p>返回结果如下。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080110.webp\"></p>\n<p>这次终于有了 ANSWER SECTION，得到了最终的二级域名的 IP 地址。</p>\n<p>至此，三个步骤的 DNS 查询全部完成。</p>\n<h2 id=\"八、DNS-服务器的种类\"><a href=\"#八、DNS-服务器的种类\" class=\"headerlink\" title=\"八、DNS 服务器的种类\"></a>八、DNS 服务器的种类</h2><p>总结一下，上面一共提到了四种服务器。</p>\n<blockquote>\n<ul>\n<li>1.1.1.1</li>\n<li>根域名服务器</li>\n<li>TLD 服务器</li>\n<li>一级域名服务器</li>\n</ul>\n</blockquote>\n<p>它们都属于 DNS 服务器，都用来接受 DNS 查询。但是作用不一样，属于不同的类别。</p>\n<h3 id=\"8-1-递归-DNS-服务器\"><a href=\"#8-1-递归-DNS-服务器\" class=\"headerlink\" title=\"8.1 递归 DNS 服务器\"></a>8.1 递归 DNS 服务器</h3><p>后三种服务器只用来查询下一级域名的 IP 地址，而 1.1.1.1 则把分步骤的查询过程自动化，方便用户一次性得到结果，所以它称为<strong>递归 DNS 服务器</strong>（recursive DNS server），即可以自动递归查询。</p>\n<p>我们平常说的 DNS 服务器，一般都是指递归 DNS 服务器。它把 DNS 查询自动化了，只要向它查询就可以了。</p>\n<p>它内部有缓存，可以保存以前查询的结果，下次再有人查询，就直接返回缓存里面的结果。所以它能加快查询，减轻源头 DNS 服务器的负担。</p>\n<h3 id=\"8-2-权威-DNS-服务器\"><a href=\"#8-2-权威-DNS-服务器\" class=\"headerlink\" title=\"8.2 权威 DNS 服务器\"></a>8.2 权威 DNS 服务器</h3><p>一级域名服务器的正式名称叫做<strong>权威域名服务器</strong>（Authoritative Name Server）。</p>\n<p>“权威”的意思是域名的 IP 地址由它给定，不像递归服务器自己做不了主。我们购买域名后，设置 DNS 服务器就是在设置该域名的权威服务器。</p>\n<h3 id=\"8-3-四种-DNS-服务器\"><a href=\"#8-3-四种-DNS-服务器\" class=\"headerlink\" title=\"8.3 四种 DNS 服务器\"></a>8.3 四种 DNS 服务器</h3><p>综上所述，DNS 服务器可以分成四种：</p>\n<blockquote>\n<ul>\n<li>根域名服务器</li>\n<li>TLD 服务器</li>\n<li>权威域名服务器</li>\n<li>递归域名服务器</li>\n</ul>\n</blockquote>\n<p>它们的关系如下图。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080112.webp\"></p>\n<p>知道了 DNS 查询的原理，完全可以自己写一个 DNS 的递归服务器，这是不难的。网上有很多参考资料，有兴趣的话，大家可以试试看。</p>\n<p><img src=\"https://cdn.beekka.com/blogimg/asset/202208/bg2022080111.webp\"></p>\n<h2 id=\"九、参考网址\"><a href=\"#九、参考网址\" class=\"headerlink\" title=\"九、参考网址\"></a>九、参考网址</h2><ul>\n<li><a href=\"https://timothya.com/blog/dns/\">Building a Recursive DNS Resolver</a>, Timothy Andrew</li>\n<li><a href=\"https://www.dnsfilter.com/blog/authoritative-vs-recursive-dns\">Authoritative Vs Recursive DNS: What You Need To Know</a>, Serena Raymond</li>\n<li><a href=\"https://www.cloudflare.com/zh-cn/learning/dns/dns-server-types/\">DNS 服务器类型</a>，Cloudflare</li>\n</ul>\n<p>（完）</p>\n"}